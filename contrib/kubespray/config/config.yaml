user: forexample
password: forexample
docker_image_tag: v1.8.1

# Optional

#######################################################################
#                    OpenPAI Customized Settings                      #
#######################################################################
# enable_hived_scheduler: true
# enable_docker_cache: false
# docker_cache_storage_backend: "azure" # or "filesystem"
# docker_cache_azure_account_name: ""
# docker_cache_azure_account_key: ""
# docker_cache_azure_container_name: "dockerregistry"
# docker_cache_fs_mount_path: "/var/lib/registry"
# docker_cache_remote_url: "https://registry-1.docker.io"
# docker_cache_htpasswd: ""
# enable_marketplace: "false"

#############################################
# Ansible-playbooks' inventory hosts' vars. #
#############################################
# ssh_key_file_path: /path/to/you/key/file

#####################################
# OpenPAI's service image registry. #
#####################################
docker_registry_domain: 192.168.99.199:8080
docker_registry_namespace: aird
# docker_registry_username: exampleuser
# docker_registry_password: examplepasswd

################################################################
# OpenPAI's daemon qos config.                                 #
# By default, the QoS class for PAI daemon is BestEffort.      #
# If you want to promote QoS class to Burstable or Guaranteed, #
# you should set the value to true.                            #
################################################################
# qos-switch: "false"

###########################################################################################
#                         Pre-check setting                                               #
###########################################################################################
# docker_check: true
# resource_check: true

########################################################################################
# Advanced docker configuration. If you are not familiar with them, don't change them. #
########################################################################################
# docker_data_root: /mnt/docker
# docker_config_file_path: /etc/docker/daemon.json
# docker_iptables_enabled: false

## An obvious use case is allowing insecure-registry access to self hosted registries.
## Can be ipaddress and domain_name.
## example define 172.19.16.11 or mirror.registry.io
openpai_docker_insecure_registries:
  - 192.168.99.199:8080
#   - 172.19.16.11

## Add other registry,example China registry mirror.
openpai_docker_registry_mirrors:
  - 192.168.99.199:8080
#   - https://mirror.aliyuncs.com

#######################################################################
#                       kubespray setting                             #
#######################################################################

# If you couldn't access to gcr.io or docker.io, please configure it.

quay_image_repo: "192.168.99.199:8080/quay_io"
docker_image_repo: "192.168.99.199:8080"
etcd_image_repo: "192.168.99.199:8080/quay_io/coreos/etcd"
kube_image_repo: "siaimes"
gcr_image_repo: "siaimes"
pod_infra_image_repo: "siaimes/pause-{{ image_arch }}"
dnsautoscaler_image_repo: "siaimes/cluster-proportional-autoscaler-{{ image_arch }}"
kubeadm_download_url: "http://192.168.99.9:10000/k8s-share/kubernetes-release/release/{{ kubeadm_version }}/bin/linux/{{ image_arch }}/kubeadm"
hyperkube_download_url: "http://192.168.99.9:10000/k8s-share/kubernetes-release/release/{{ kube_version }}/bin/linux/{{ image_arch }}/hyperkube"
cni_download_url: "http://192.168.99.9:10000/k8s-share/containernetworking/plugins/releases/download/{{ cni_version }}/cni-plugins-linux-{{ image_arch }}-{{ cni_version }}.tgz"
calicoctl_download_url: "http://192.168.99.9:10000/k8s-share/projectcalico/calicoctl/releases/download/{{ calico_ctl_version }}/calicoctl-linux-{{ image_arch }}"


# kubeadm_download_url: "https://storage.googleapis.com/kubernetes-release/release/{{ kubeadm_version }}/bin/linux/{{ image_arch }}/kubeadm"
# hyperkube_download_url: "https://storage.googleapis.com/kubernetes-release/release/{{ kube_version }}/bin/linux/{{ image_arch }}/hyperkube"

# openpai_kube_network_plugin: calico

# openpai_kubespray_extra_var:
#   key: value
#   key: value
openpai_kubespray_extra_var:
  #当download_run_once为true且download_localhost为false时，所有下载将在委托节点上完成，包括该节点上不需要的容器镜像的下载。结果，该节点上所需的存储可能比download_run_once为false时要多，因为所有映像都将加载到该节点上的docker实例中，而不仅仅是该节点所需的映像。
  download_run_once: true
  download_localhost: false
  #默认存在/tmp/kubespray_cache
  download_keep_remote_cache: true
# Ref: https://github.com/microsoft/pai/issues/5150
# kubelet_custom_flags:
#   serialize-image-pulls: "false"

#######################################################################
#                     host daemon port setting                        #
#######################################################################
# host_daemon_port_start: 40000
# host_daemon_port_end: 65535
